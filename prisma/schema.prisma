// Prisma schema file

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  MEMBER
}

enum Status {
  PENDING
  IN_PROGRESS
  COMPLETED
}

enum Priority {
  HIGH
  MEDIUM
  LOW
}

model User {
  id            String          @id @default(uuid())
  name          String
  email         String
  password      String
  role          Role            @default(MEMBER)

  memberships   TeamMembers[]
  tasks         Tasks[]         @relation("AssignedTasks")
  tasksHistory  TasksHistory[]

  createdAt     DateTime        @default(now()) @map("created_at")
  updatedAt     DateTime        @updatedAt @map("updated_at")

  @@map("users")
}

model Teams {
  id          String       @id @default(uuid())
  name        String       @unique
  description String

  members     TeamMembers[]
  tasks       Tasks[]

  createdAt   DateTime     @default(now()) @map("created_at")
  updatedAt   DateTime     @updatedAt @map("updated_at")
}

model TeamMembers {
  id        String    @id @default(uuid())
  userId    String    @map("user_id")
  teamId    String    @map("team_id")

  user      User      @relation(fields: [userId], references: [id])
  team      Teams     @relation(fields: [teamId], references: [id])

  createdAt DateTime  @default(now()) @map("created_at")
}

model Tasks {
  id           String       @id @default(uuid())
  title        String
  description  String?

  status       Status       @default(PENDING)
  priority     Priority

  assignedToId String       @map("assigned_to")
  teamId       String       @map("team_id")

  assignedTo   User         @relation("AssignedTasks", fields: [assignedToId], references: [id])
  team         Teams        @relation(fields: [teamId], references: [id])
  history      TasksHistory[]

  createdAt    DateTime     @default(now()) @map("created_at")
  updatedAt    DateTime     @updatedAt @map("updated_at")
}

model TasksHistory {
  id         String   @id @default(uuid())
  taskId     String   @map("task_id")
  changedBy  String   @map("changed_by")

  oldStatus  Status   @map("old_status")
  newStatus  Status   @map("new_status")
  changedAt  DateTime @map("changed_at")

  task       Tasks    @relation(fields: [taskId], references: [id])
  user       User     @relation(fields: [changedBy], references: [id])
}
